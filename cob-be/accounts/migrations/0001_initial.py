# Generated by Django 4.2.13 on 2024-05-30 01:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, choices=[('Client', 'Client'), ('SalesAgent', 'SalesAgent'), ('Admin', 'Admin')], max_length=20, null=True)),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('location', models.CharField(blank=True, choices=[('Hyderabad', 'Hyderabad'), ('Chennai', 'Chennai'), ('Bangalore', 'Bangalore'), ('Mumbai', 'Mumbai')], max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=50)),
                ('plan_description', models.TextField()),
                ('period', models.IntegerField(default=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('employee_count', models.CharField(choices=[('0-50', '0-50'), ('50-100', '50-100'), ('100-500', '100-500'), ('500-2000', '500-2000'), ('2000+', '2000+')], max_length=50)),
                ('product', models.CharField(choices=[('Voice Solution', 'Voice Solution'), ('ChatBots', 'ChatBots'), ('Education', 'Education'), ('Email Solution', 'Email Solution')], default='Voice Solution', max_length=50)),
                ('is_approved', models.BooleanField(default=False)),
                ('company_pan', models.CharField(max_length=10, null=True)),
                ('company_pan_doc', models.FileField(null=True, upload_to='accounts/kyc_documents/')),
                ('certificate_of_incorporation_doc', models.FileField(null=True, upload_to='accounts/kyc_documents/')),
                ('company_address_doc', models.FileField(null=True, upload_to='accounts/kyc_documents/')),
                ('gstin', models.CharField(blank=True, max_length=15, null=True)),
                ('plan_status', models.BooleanField(default=False)),
                ('licenses', models.IntegerField(default=0)),
                ('plan_selected', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.plan')),
            ],
        ),
    ]
